All endpoints of /api and /wapi are under https://api.binance.com
All endpoints return either a JSON object or array.
Data is returned in ascending order. Oldest first, newest last.
All time and timestamp related fields are in milliseconds.

Error codes
----------------------

HTTP 4XX return codes are used for for malformed requests; the issue is on the sender's side.
HTTP 5XX return codes are used for internal errors; the issue is on Binance's side.
HTTP 504 return code is used when the API successfully sent the message but not get a response within the timeout period. It is important to NOT treat this as a failure; the execution status is UNKNOWN and could have been a success.
Any endpoint can retun an ERROR; the error payload is as follows:
{
  "code": -1121,
  "msg": "Invalid symbol."
}
Specific error codes and messages defined in another document.

Terminology
----------------------
base asset      refers to the asset that is the quantity of a symbol.
quoate asset    refers to the asset that is the price of a symbol.


ENUM definitions
----------------------

Symbol type:
  SPOT

Order status:
  NEW
  PARTIALLY_FILLED
  FILLED
  CANCELED
  PENDING_CANCEL
  REJECTED
  EXPIRED

Order types:
  LIMIT
  MARKET

Order side:
  BUY
  SELL

Time in force:
  GTC
  IOC

Kline intervals:
  1m, 3m, 5m, 15m, 30m, 1h, 2h, 4h, 6h, 8h, 12h, 1d, 3d, 1w, 1M

Websocekts
----------------------
The base endpoint is: wss://stream.binance.com:9443
Streams can be access either in a single raw stream or a combined stream
Raw streams are accessed at /ws/<streamName>
Combined streams are accessed at /stream?streams=<streamName1>/<streamName2>/<streamName3>
Combined stream events are wrapped as follows: {"stream":"<streamName>","data":<rawPayload>}
All symbols for streams are lowercase
A single connection to stream.binance.com is only valid for 24 hours; expect to be disconnected at the 24 hour mark.


---------------------------------------------------------------------------------
Ticker
---------------------------------------------------------------------------------


  Single Ticker:

  Stream Name: <symbol>@ticker

  // request
  wss://stream.binance.com:9443/ws/[symbol in lower case]@ticker
  (e.g. wss://stream.binance.com:9443/ws/ethbtc@kline_1m)

  Payload:

  {
    "e": "24hrTicker",  // Event type
    "E": 123456789,     // Event time
    "s": "BNBBTC",      // Symbol
    "p": "0.0015",      // Price change
    "P": "250.00",      // Price change percent
    "w": "0.0018",      // Weighted average price
    "x": "0.0009",      // Previous day's close price
    "c": "0.0025",      // Current day's close price
    "Q": "10",          // Close trade's quantity
    "b": "0.0024",      // Best bid price
    "B": "10",          // Bid bid quantity
    "a": "0.0026",      // Best ask price
    "A": "100",         // Best ask quantity
    "o": "0.0010",      // Open price
    "h": "0.0025",      // High price
    "l": "0.0010",      // Low price
    "v": "10000",       // Total traded base asset volume
    "q": "18",          // Total traded quote asset volume
    "O": 0,             // Statistics open time
    "C": 86400000,      // Statistics close time
    "F": 0,             // First trade ID
    "L": 18150,         // Last trade Id
    "n": 18151          // Total number of trades
  }

  All Market Tickers Stream:

  24hr Ticker statistics for all symbols in an array pushed every second

  Stream Name: !ticker@arr

  Payload:

  [
    {
      // Same as for single ticker
    }
  ]

  Generally, ticker should return


---------------------------------------------------------------------------------
Order Book
---------------------------------------------------------------------------------

  // request
   wss://stream.binance.com:9443/ws/[symbol in lower case]@depth
   (e.g. wss://stream.binance.com:9443/ws/ethbtc@depth)

  // response
  {
     "e": "depthUpdate",        // event type
     "E": 1499404630606,        // event time
     "s": "ETHBTC",             // symbol
     "U": 157,                  // First update ID in event
     "u": 160,                  // Final update ID in event
     "b": [                     // bids
        [
           "0.10376590",        // price (need to update the quantity on this price)
           "59.15767010",       // quantity
           []                   // can be ignored
        ],
     ],
     "a": [                     // asks
        [
           "0.10376586",        // price (need to upate the quantity on this price)
           "159.15767010",      // quantity
           []                   // can be ignored
        ],
        [
           "0.10490700",
           "0.00000000",        //quantitiy=0 means remove this level
           []
        ]
     ]
  }

  How to manage a local order book correctly :

  Open a stream to wss://stream.binance.com:9443/ws/bnbbtc@depth
  Buffer the events you receive from the stream
  Get a depth snapshot from **https://www.binance.com/api/v1/depth?symbol=BNBBTC&limit=1000"
  Drop any event where u is <= lastUpdateId in the snapshot
  The first processed should have U <= lastUpdateId+1 AND u >= lastUpdateId+1
  While listening to the stream, each new event's U should be equal to the previous event's u+1
  The data in each event is the absolute quantity for a price level
  If the quantity is 0, remove the price level
  Receiving an event that removes a price level that is not in your local order book can happen and is normal.
  limit : default 100; max 1000. Valid limits:[5, 10, 20, 50, 100, 500, 1000]


---------------------------------------------------------------------------------
Trades
---------------------------------------------------------------------------------


  // request
  wss://stream.binance.com:9443/ws/[symbol in lower case]@trade
  (e.g. wss://stream.binance.com:9443/ws/ethbtc@aggTrade)

  // response
  {
    "e": "trade",     // Event type
    "E": 123456789,   // Event time
    "s": "BNBBTC",    // Symbol
    "t": 12345,       // Trade ID
    "p": "0.001",     // Price
    "q": "8.156",     // Quantity
    "b": 88,          // Buyer order Id
    "a": 50,          // Seller order Id
    "T": 123456785,   // Trade time
    "m": true,        // Is the buyer the market maker?
    "M": true         // Ignore.


---------------------------------------------------------------------------------
Candles
---------------------------------------------------------------------------------


  // request
  wss://stream.binance.com:9443/ws/[symbol in lower case]@kline_[interval]
  (e.g. wss://stream.binance.com:9443/ws/ethbtc@kline_1m)

  // response
  {
     "e": "kline",                    // event type
     "E": 1499404907056,              // event time
     "s": "ETHBTC",                   // symbol
     "k": {
           "t": 1499404860000,        // start time of this bar
           "T": 1499404919999,        // end time of this bar
           "s": "ETHBTC",             // symbol
           "i": "1m",                 // interval
           "f": 77462,                // first trade id
           "L": 77465,                // last trade id
           "o": "0.10278577",         // open
           "c": "0.10278645",         // close
           "h": "0.10278712",         // high
           "l": "0.10278518",         // low
           "v": "17.47929838",        // volume
           "n": 4,                    // number of trades
           "x": false,                // whether this bar is final
           "q": "1.79662878",         // quote volume
           "V": "2.34879839",         // taker buy base asset volume
           "Q": "0.24142166",         // taker buy quote asset volume
           "B": "13279784.01349473"   // can be ignored
          }
  }




---------------------------------------------------------------------------------
Orders & Trades
---------------------------------------------------------------------------------

{
  "e": "executionReport",        // Event type
  "E": 1499405658658,            // Event time
  "s": "ETHBTC",                 // Symbol
  "c": "mUvoqJxFIILMdfAW5iGSOW", // Client order ID
  "S": "BUY",                    // Side
  "o": "LIMIT",                  // Order type
  "f": "GTC",                    // Time in force
  "q": "1.00000000",             // Order quantity
  "p": "0.10264410",             // Order price
  "P": "0.00000000",             // Stop price
  "F": "0.00000000",             // Iceberg quantity
  "g": -1,                       // Ignore
  "C": "null",                   // Original client order ID; This is the ID of the order being canceled
  "x": "NEW",                    // Current execution type
  "X": "NEW",                    // Current order status
  "r": "NONE",                   // Order reject reason; will be an error code.
  "i": 4293153,                  // Order ID
  "l": "0.00000000",             // Last executed quantity
  "z": "0.00000000",             // Cumulative filled quantity
  "L": "0.00000000",             // Last executed price
  "n": "0",                      // Commission amount
  "N": null,                     // Commission asset
  "T": 1499405658657,            // Transaction time
  "t": -1,                       // Trade ID
  "I": 8641984,                  // Ignore
  "w": true,                     // Is the order working? Stops will have
  "m": false,                    // Is this trade the maker side?
  "M": false                     // Ignore
}



---------------------------------------------------------------------------------
Balances
---------------------------------------------------------------------------------

{
  "e": "outboundAccountInfo",   // Event type
  "E": 1499405658849,           // Event time
  "m": 0,                       // Maker commission rate (bips)
  "t": 0,                       // Taker commission rate (bips)
  "b": 0,                       // Buyer commission rate (bips)
  "s": 0,                       // Seller commission rate (bips)
  "T": true,                    // Can trade?
  "W": true,                    // Can withdraw?
  "D": true,                    // Can deposit?
  "u": 1499405658848,           // Time of last account update
  "B": [                        // Balances array
    {
      "a": "LTC",               // Asset
      "f": "17366.18538083",    // Free amount
      "l": "0.00000000"         // Locked amount
    },
    {
      "a": "BTC",
      "f": "10537.85314051",
      "l": "2.19464093"
    },
    {
      "a": "ETH",
      "f": "17902.35190619",
      "l": "0.00000000"
    },
    {
      "a": "BNC",
      "f": "1114503.29769312",
      "l": "0.00000000"
    },
    {
      "a": "NEO",
      "f": "0.00000000",
      "l": "0.00000000"
    }
  ]
}